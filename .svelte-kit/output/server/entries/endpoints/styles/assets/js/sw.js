const i="precache-v1",r="runtime",c=["./","./../css/bootstrap.css","./../css/magnific-popup.css","./../css/swiper.min.css","./../css/perfect-scrollbar.css","./../css/aos.css","./../css/custom.css","./jquery.slim.min.js","./popper.min.js","./bootstrap.min.js","./swiper.min.js","./jquery.inputmask.min.js","./perfect-scrollbar.min.js","./jquery.magnific-popup.min.js","./../plugins/validation/jquery.validate.min.js","./aos.js","./main.js"];self.addEventListener("install",s=>{s.waitUntil(caches.open(i).then(e=>e.addAll(c)).then(self.skipWaiting()))});self.addEventListener("activate",s=>{const e=[i,r];s.waitUntil(caches.keys().then(n=>n.filter(t=>!e.includes(t))).then(n=>Promise.all(n.map(t=>caches.delete(t)))).then(()=>self.clients.claim()))});self.addEventListener("fetch",s=>{s.request.url.startsWith(self.location.origin)&&s.respondWith(caches.match(s.request).then(e=>e||caches.open(r).then(n=>fetch(s.request).then(t=>n.put(s.request,t.clone()).then(()=>t)))))});
